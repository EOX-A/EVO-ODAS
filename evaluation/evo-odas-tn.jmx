<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Open Search Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list">
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">http://oda.dlr.de</stringProp>
            <stringProp name="Authorization.username">evouser</stringProp>
            <stringProp name="Authorization.password">evo16odas!</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm">EVO-ODAS EOxServer</stringProp>
          </elementProp>
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">https://oda.dlr.de</stringProp>
            <stringProp name="Authorization.username">evouser</stringProp>
            <stringProp name="Authorization.password">evo16odas!</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm">EVO-ODAS EOxServer</stringProp>
          </elementProp>
        </collectionProp>
      </AuthManager>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="false"/>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1507124665000</longProp>
        <longProp name="ThreadGroup.end_time">1507124665000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CEOS Tests" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CEOS-BP-Requirements" enabled="false"/>
          <hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Running CEOS-BP-Requirements for ${implementation}" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CEOS-BP-001" enabled="true">
              <stringProp name="TestPlan.comments">Support of two-step search</stringProp>
            </GenericController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-001 - Support of two step search - step 1 - OSDD" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${url}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${root_osdd_path}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Support of two step search</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-001 Assertion" enabled="true">
                  <stringProp name="TestPlan.comments">Support of two step search</stringProp>
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">//opensearch:Url[@rel=&quot;collection&quot;]</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">false</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">true</boolProp>
                </XPathAssertion>
                <hashTree/>
                <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Collection Template URL extractor" enabled="true">
                  <stringProp name="XPathExtractor.default"></stringProp>
                  <stringProp name="XPathExtractor.refname">ceos_bp_001_collection_search_template</stringProp>
                  <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                  <stringProp name="XPathExtractor.xpathQuery">//opensearch:Url[@rel=&quot;collection&quot;]/@template</stringProp>
                  <boolProp name="XPathExtractor.validate">false</boolProp>
                  <boolProp name="XPathExtractor.tolerant">false</boolProp>
                  <boolProp name="XPathExtractor.namespace">true</boolProp>
                </XPathExtractor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Template URL components extractor" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">String template = vars.get(&quot;ceos_bp_001_collection_search_template&quot;);
URL url = new URL(template);
int port = url.getPort();
String path = url.getPath();
String host = url.getHost();
vars.put(&quot;ceos_bp_001_collection_search_port&quot;, String.valueOf(port));
vars.put(&quot;ceos_bp_001_collection_search_path&quot;, path);
vars.put(&quot;ceos_bp_001_collection_search_host&quot;, host);</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-001 - Support of two step search - step 1 - search" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ceos_bp_001_collection_search_host}</stringProp>
                <stringProp name="HTTPSampler.port">${ceos_bp_001_collection_search_port}</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ceos_bp_001_collection_search_path}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Support of two step search</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-001 Assertion" enabled="true">
                  <stringProp name="TestPlan.comments">Support of two step search</stringProp>
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">//atom:entry/atom:link[@rel=&quot;search&quot;]</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">false</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">true</boolProp>
                </XPathAssertion>
                <hashTree/>
                <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Atom HREF extractor" enabled="true">
                  <stringProp name="XPathExtractor.default"></stringProp>
                  <stringProp name="XPathExtractor.refname">ceos_bp_001_collection_osdd_url</stringProp>
                  <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                  <stringProp name="XPathExtractor.xpathQuery">//atom:entry/atom:link[@rel=&quot;search&quot;]/@href</stringProp>
                  <boolProp name="XPathExtractor.validate">false</boolProp>
                  <boolProp name="XPathExtractor.tolerant">false</boolProp>
                  <boolProp name="XPathExtractor.namespace">true</boolProp>
                </XPathExtractor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Atom HREFcomponents extractor" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">String template = vars.get(&quot;ceos_bp_001_collection_osdd_url&quot;);
URL url = new URL(template);
int port = url.getPort();
String path = url.getPath();
if(url.getQuery() != null &amp;&amp; !url.getQuery().isEmpty()) {
	path = path + &quot;?&quot; + url.getQuery();
}
String host = url.getHost();
vars.put(&quot;ceos_bp_001_collection_osdd_port&quot;, String.valueOf(port));
vars.put(&quot;ceos_bp_001_collection_osdd_path&quot;, path);
vars.put(&quot;ceos_bp_001_collection_osdd_host&quot;, host);</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-001 - Support of two step search - step 2 - OSDD" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ceos_bp_001_collection_osdd_host}</stringProp>
                <stringProp name="HTTPSampler.port">${ceos_bp_001_collection_osdd_port}</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ceos_bp_001_collection_osdd_path}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Support of two step search</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-001 Assertion" enabled="true">
                  <stringProp name="TestPlan.comments">Support of two step search</stringProp>
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">//opensearch:Url[@rel=&quot;results&quot;]</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">false</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">true</boolProp>
                </XPathAssertion>
                <hashTree/>
                <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Results URL extractor" enabled="true">
                  <stringProp name="XPathExtractor.default"></stringProp>
                  <stringProp name="XPathExtractor.refname">ceos_bp_001_granule_search_url</stringProp>
                  <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                  <stringProp name="XPathExtractor.xpathQuery">//opensearch:Url[@rel=&quot;results&quot;]/@template</stringProp>
                  <boolProp name="XPathExtractor.validate">false</boolProp>
                  <boolProp name="XPathExtractor.tolerant">false</boolProp>
                  <boolProp name="XPathExtractor.namespace">true</boolProp>
                </XPathExtractor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Results URL components extractor" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">String template = vars.get(&quot;ceos_bp_001_granule_search_url&quot;);
URL url = new URL(template);
int port = url.getPort();
String path = url.getPath();
if(url.getQuery() != null &amp;&amp; !url.getQuery().isEmpty()) {
	String query = url.getQuery();
	String cleanedQuery = query.replaceAll(&quot;\\{(.*?)\\}&quot;, &quot;&quot;);
	path = path + &quot;?&quot; + cleanedQuery;
}
String host = url.getHost();
vars.put(&quot;ceos_bp_001_granule_search_port&quot;, String.valueOf(port));
vars.put(&quot;ceos_bp_001_granule_search_path&quot;, path);
vars.put(&quot;ceos_bp_001_granule_search_host&quot;, host);</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-001 - Support of two step search - step 2 - search" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ceos_bp_001_granule_search_host}</stringProp>
                <stringProp name="HTTPSampler.port">${ceos_bp_001_granule_search_port}</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${ceos_bp_001_granule_search_path}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Support of two step search</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-001 Assertion" enabled="true">
                  <stringProp name="TestPlan.comments">Support of two step search</stringProp>
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">//opensearch:totalResults</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">false</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">true</boolProp>
                </XPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-002 - Support of OpenSearch Parameter Extension (Draft 2)" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${root_osdd_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Support of OpenSearch Parameter Extension (Draft 2)</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-002 Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Support of OpenSearch Parameter Extension (Draft 2)</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//parameters:Parameter</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-002B - Free text parameters" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${root_osdd_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Free text parameters</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-002B Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Free text parameters</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//parameters:Parameter/atom:link[@rel=&apos;profile&apos;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-002C - Advertising supported geometry types" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${root_osdd_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Advertising supported geometry types</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-002C Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Advertising supported geometry types</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//parameters:Parameter[@value=&apos;{geo:geometry}&apos;]/atom:link[@rel=&apos;profile&apos;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-003 - rel attribute of the URL in OSDD" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${root_osdd_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">rel attribute of the URL in OSDD</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-003 Assertion" enabled="true">
                <stringProp name="TestPlan.comments">rel attribute of the URL in OSDD</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//opensearch:Url[@rel=&apos;collection&apos;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-005 -Supported search parameters" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${root_osdd_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Supported search parameters</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-005 Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Supported search parameters</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//opensearch:Url[
    count(
		./parameters:Parameter[@value=&apos;{searchTerms}&apos;] |
		./parameters:Parameter[@value=&apos;{count}&apos;] |
		./parameters:Parameter[@value=&apos;{startIndex}&apos; or @value=&apos;{startPage}&apos;] |
		./parameters:Parameter[@value=&apos;{geo:uid}&apos;] |
		./parameters:Parameter[@value=&apos;{geo:box}&apos;] |
		./parameters:Parameter[@value=&apos;{time:start}&apos;] |
		./parameters:Parameter[@value=&apos;{time:end}&apos;]
	) = 7
]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-005C - Search with satellite name" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${root_osdd_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Search with satellite name</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-005C Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Search with satellite name</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//parameters:Parameter[@value=&apos;{eo:platform}&apos;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-010 - Output encoding format support" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${root_osdd_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Output encoding format support</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-010 Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Output encoding format support</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//opensearch:Url[@type=&quot;application/atom+xml&quot;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-011B - Result set navigation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                  <elementProp name="${start_index_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${start_index_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Result set navigation</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-011B Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Result set navigation</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">/atom:feed[count(./atom:link[@rel=&apos;first&apos; or @rel=&apos;prev&apos; or @rel=&apos;previous&apos; or @rel=&apos;next&apos; or @rel=&apos;last&apos; or @rel=&apos;self&apos;]) = 5]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-012 - Metadata representation in search response" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Metadata representation in search response</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-012 Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Metadata representation in search response</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//atom:entry[./atom:link[@rel=&quot;alternate&quot; or @rel=&quot;via&quot;]]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-012D - Relation attribute values" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Relation attribute values</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-012D Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Relation attribute values</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">/</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-013 - atom:summary" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">atom:summary</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-013 Assertion" enabled="true">
                <stringProp name="TestPlan.comments">atom:summary</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//atom:entry/atom:summary</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-013B - Dublin Core date" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Dublin Core date</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-013B Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Dublin Core date</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//atom:entry/dc:date</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-015 - Browse image" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Browse image</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-015 Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Browse image</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//atom:entry[.//media:content/media:category[text()=&apos;QUICKLOOK&apos;] or ./atom:link[@rel=&apos;icon&apos;]]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-016 - Data access" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Data access</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-016 Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Data access</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//atom:entry/atom:link[@rel=&apos;enclosure&apos;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CEOS-BP-011" enabled="true">
              <stringProp name="TestPlan.comments">Support of dc:identifier in search response to allow for search-byID</stringProp>
            </GenericController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-011 - Support of dc:identifier in search response to allow for search-byID - OSDD" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${url}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${root_osdd_path}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Support of dc:identifier in search response to allow for search-byID</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-011 Assertion" enabled="true">
                  <stringProp name="TestPlan.comments">Support of dc:identifier in search response to allow for search-byID</stringProp>
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">//parameters:Parameter[@value=&quot;{geo:uid}&quot;]</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">false</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">true</boolProp>
                </XPathAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-011 - Support of dc:identifier in search response to allow for search-byID - Search" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="${count_var}" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">${count_var}</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${url}</stringProp>
                <stringProp name="HTTPSampler.port">${port}</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Support of dc:identifier in search response to allow for search-byID</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-011 Assertion" enabled="true">
                  <stringProp name="TestPlan.comments">Support of dc:identifier in search response to allow for search-byID</stringProp>
                  <boolProp name="XPath.negate">false</boolProp>
                  <stringProp name="XPath.xpath">//dc:identifier</stringProp>
                  <boolProp name="XPath.validate">false</boolProp>
                  <boolProp name="XPath.whitespace">false</boolProp>
                  <boolProp name="XPath.tolerant">false</boolProp>
                  <boolProp name="XPath.namespace">true</boolProp>
                </XPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CEOS-BP-017" enabled="true">
              <stringProp name="TestPlan.comments">Exception codes</stringProp>
            </GenericController>
            <hashTree/>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="EVO-ODAS-TN-001 - Service links (cross service links)" enabled="true">
              <stringProp name="TestPlan.comments">Service links (cross service links)</stringProp>
            </GenericController>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If-WMS" enabled="true">
                <stringProp name="IfController.condition">true</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - EVO-ODAS-TN-001 - Service links (cross service links) - WMS - GetCapabilities" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="${count_var}" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">${count_var}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${url}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Data access</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="GetCapabilities Assertion" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//atom:entry/owc:offering[@code=&quot;http://www.opengis.net/spec/owc-atom/1.0/req/wms&quot;]/owc:operation[@code=&quot;GetCapabilities&quot;]</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">false</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">true</boolProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - EVO-ODAS-TN-001 - Service links (cross service links) - WMS - GetMap" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="${count_var}" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">${count_var}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${url}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Data access</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="GetMap Assertion" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//atom:entry/owc:offering[@code=&quot;http://www.opengis.net/spec/owc-atom/1.0/req/wms&quot;]/owc:operation[@code=&quot;GetMap&quot;]</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">false</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">true</boolProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If-WMTS" enabled="true">
                <stringProp name="IfController.condition">${supports_wmts}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - EVO-ODAS-TN-001 - Service links (cross service links) - WMTS - GetCapabilities" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="${count_var}" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">${count_var}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${url}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Data access</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="GetCapabilities Assertion" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//atom:entry/owc:offering[@code=&quot;http://www.opengis.net/spec/owc-atom/1.0/req/wmts&quot;]/owc:operation[@code=&quot;GetCapabilities&quot;]</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">false</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">true</boolProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - EVO-ODAS-TN-001 - Service links (cross service links) - WMTS - GetTile" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="${count_var}" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">${count_var}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${url}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Data access</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="GetTile Assertion" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//atom:entry/owc:offering[@code=&quot;http://www.opengis.net/spec/owc-atom/1.0/req/wmts&quot;]/owc:operation[@code=&quot;GetTile&quot;]</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">false</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">true</boolProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If-WCS" enabled="true">
                <stringProp name="IfController.condition">${supports_wcs}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - EVO-ODAS-TN-001 - Service links (cross service links) - WCS - GetCapabilities" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="${count_var}" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">${count_var}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${url}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Data access</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="GetCapabilities Assertion" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//atom:entry/owc:offering[@code=&quot;http://www.opengis.net/spec/owc-atom/1.0/req/wcs&quot;]/owc:operation[@code=&quot;GetCapabilities&quot;]</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">false</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">true</boolProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - EVO-ODAS-TN-001 - Service links (cross service links) - WCS - DescribeCoverage" enabled="false">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="${count_var}" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">${count_var}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${url}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Data access</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="DescribeCoverage Assertion" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//atom:entry/owc:offering[@code=&quot;http://www.opengis.net/spec/owc-atom/1.0/req/wcs&quot;]/owc:operation[@code=&quot;DescribeCoverage&quot;]</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">false</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">true</boolProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - EVO-ODAS-TN-001 - Service links (cross service links) - WCS - GetCoverage" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="${count_var}" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">${count_var}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${url}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Data access</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="GetCoverage Assertion" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//atom:entry/owc:offering[@code=&quot;http://www.opengis.net/spec/owc-atom/1.0/req/wcs&quot;]/owc:operation[@code=&quot;GetCoverage&quot;]</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">false</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">true</boolProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If-WFS" enabled="true">
                <stringProp name="IfController.condition">${supports_wfs}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - EVO-ODAS-TN-001 - Service links (cross service links) - WFS - GetCapabilities" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="${count_var}" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">${count_var}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${url}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Data access</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="GetCapabilities Assertion" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//atom:entry/owc:offering[@code=&quot;http://www.opengis.net/spec/owc-atom/1.0/req/wfs&quot;]/owc:operation[@code=&quot;GetCapabilities&quot;]</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">false</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">true</boolProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - EVO-ODAS-TN-001 - Service links (cross service links) - WFS - DescribeFeature" enabled="false">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="${count_var}" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">${count_var}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${url}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Data access</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="DescribeFeature Assertion" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//atom:entry/owc:offering[@code=&quot;http://www.opengis.net/spec/owc-atom/1.0/req/wfs&quot;]/owc:operation[@code=&quot;DescribeFeature&quot;]</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">false</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">true</boolProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - EVO-ODAS-TN-001 - Service links (cross service links) - WFS - GetFeature" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="${count_var}" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">${count_var}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${url}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Data access</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="GetFeature Assertion" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//atom:entry/owc:offering[@code=&quot;http://www.opengis.net/spec/owc-atom/1.0/req/wfs&quot;]/owc:operation[@code=&quot;GetFeature&quot;]</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">false</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">true</boolProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If-WPS" enabled="true">
                <stringProp name="IfController.condition">${supports_wps}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - EVO-ODAS-TN-001 - Service links (cross service links) - WPS - GetCapabilities" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="${count_var}" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">${count_var}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${url}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Data access</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="GetCapabilities Assertion" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//atom:entry/owc:offering[@code=&quot;http://www.opengis.net/spec/owc-atom/1.0/req/wps&quot;]/owc:operation[@code=&quot;GetCapabilities&quot;]</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">false</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">true</boolProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - EVO-ODAS-TN-001 - Service links (cross service links) - WPS - DescribeProcess" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="${count_var}" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">${count_var}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${url}</stringProp>
                  <stringProp name="HTTPSampler.port">${port}</stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Data access</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="DescribeProcess Assertion" enabled="true">
                    <boolProp name="XPath.negate">false</boolProp>
                    <stringProp name="XPath.xpath">//atom:entry/owc:offering[@code=&quot;http://www.opengis.net/spec/owc-atom/1.0/req/wps&quot;]/owc:operation[@code=&quot;DescribeProcess&quot;]</stringProp>
                    <boolProp name="XPath.validate">false</boolProp>
                    <boolProp name="XPath.whitespace">false</boolProp>
                    <boolProp name="XPath.tolerant">false</boolProp>
                    <boolProp name="XPath.namespace">true</boolProp>
                  </XPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CEOS-BP-Recommended" enabled="false"/>
          <hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Running CEOS-BP-Recommended for ${implementation}" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-003B - Query element in OSDD" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${root_osdd_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Query element in OSDD</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-003B Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Query element in OSDD</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//opensearch:Url[@rel=&apos;example&apos;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-004 - CEOS OpenSearch Best Practice identifier " enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${root_osdd_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">CEOS OpenSearch Best Practice identifier </stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-004 Assertion" enabled="true">
                <stringProp name="TestPlan.comments">CEOS OpenSearch Best Practice identifier </stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//opensearch:Tags[text()[contains(., &apos;CEOS-OS-BP-V&apos;)]]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-007 - Use of startIndex over startPage" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${root_osdd_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Use of startIndex over startPage</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-007 Assertion - startIndex" enabled="true">
                <stringProp name="TestPlan.comments">Use of startIndex over startPage</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//parameters:Parameter[@value=&apos;{startIndex}&apos;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-007 Assertion - startPage" enabled="true">
                <stringProp name="TestPlan.comments">Use of startIndex over startPage</stringProp>
                <boolProp name="XPath.negate">true</boolProp>
                <stringProp name="XPath.xpath">//parameters:Parameter[@value=&apos;{startPage}&apos;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-008 - Search with geo:name" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${root_osdd_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Search with geo:name</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-008 Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Search with geo:name</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//parameters:Parameter[@value=&apos;{geo:name}&apos;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-012C - Reference to documentation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Reference to documentation</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-012C Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Reference to documentation</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//atom:entry/atom:link[@rel=&quot;describedby&quot;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-012E - Link type attribute" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Link type attribute</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-012E Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Link type attribute</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">/</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-014 - GeoRSS" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">GeoRSS</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-014 Assertion" enabled="true">
                <stringProp name="TestPlan.comments">GeoRSS</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//atom:entry/georss:where</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-014B - GeoRSS multi-polygon footprint" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">GeoRSS multi-polygon footprint</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-014B Assertion" enabled="true">
                <stringProp name="TestPlan.comments">GeoRSS multi-polygon footprint</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//atom:entry/georss:where/gml:MultiSurface</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-014C - GeoRSS multi-point footprint" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">GeoRSS multi-point footprint</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-014C Assertion" enabled="true">
                <stringProp name="TestPlan.comments">GeoRSS multi-point footprint</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">/</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-014D - GeoRSS multi-line footprint" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">GeoRSS multi-line footprint</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-014D Assertion" enabled="true">
                <stringProp name="TestPlan.comments">GeoRSS multi-line footprint</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">/</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CEOS-BP-Optionals" enabled="false"/>
          <hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Running CEOS-BP-Optionals for ${implementation}" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-004B - indexOffset/pageOffset attribute of the URL in OSDD" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${root_osdd_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">indexOffset/pageOffset attribute of the URL in OSDD</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-004B Assertion" enabled="true">
                <stringProp name="TestPlan.comments">indexOffset/pageOffset attribute of the URL in OSDD</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//opensearch:Url[@indexOffset | @pageOffset]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-005B - Search with count=0" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Search with count=0</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-005B Assertion - totalResults" enabled="true">
                <stringProp name="TestPlan.comments">Search with count=0</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//opensearch:totalResults[text() != &apos;0&apos;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-005B Assertion - entries" enabled="true">
                <stringProp name="TestPlan.comments">Search with count=0</stringProp>
                <boolProp name="XPath.negate">true</boolProp>
                <stringProp name="XPath.xpath">atom:entry</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-005D - Client identification" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${root_osdd_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Client identification</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-005D Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Client identification</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//parameters:Parameter[@value=&apos;{referrer:source}&apos;]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-009 - Output encoding format in search URL" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${root_osdd_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Output encoding format in search URL</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-009 Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Output encoding format in search URL</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//opensearch:Url[contains(substring-before(@template, &apos;?&apos;), &apos;atom&apos;)]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-012B - Provenance information " enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Provenance information </stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-012B Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Provenance information </stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">/</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-014E - Minimum-bounding rectangle" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Minimum-bounding rectangle</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-014E Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Minimum-bounding rectangle</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">//atom:entry/georss:box</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-015B - Multiple browse images" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Multiple browse images</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-015B Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Multiple browse images</stringProp>
                <boolProp name="XPath.negate">true</boolProp>
                <stringProp name="XPath.xpath">//atom:entry[count(./media:content/media:category[text()=&apos;QUICKLOOK&apos;]) &gt; 1]</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-016B - Data access to multiple files" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Data access to multiple files</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-016B Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Data access to multiple files</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">/</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${implementation} - CEOS-BP-016C - Data access for data download and order" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="${count_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${count_var}</stringProp>
                  </elementProp>
                  <elementProp name="${start_index_var}" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">${start_index_var}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${url}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${collection_search_path}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Data access for data download and order</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="CEOS-BP-016C Assertion" enabled="true">
                <stringProp name="TestPlan.comments">Data access for data download and order</stringProp>
                <boolProp name="XPath.negate">false</boolProp>
                <stringProp name="XPath.xpath">/</stringProp>
                <boolProp name="XPath.validate">false</boolProp>
                <boolProp name="XPath.whitespace">false</boolProp>
                <boolProp name="XPath.tolerant">false</boolProp>
                <boolProp name="XPath.namespace">true</boolProp>
              </XPathAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CEOS Tests Runner - EOxServer" enabled="true"/>
          <hashTree>
            <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
              <stringProp name="WhileController.condition"></stringProp>
            </WhileController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">evo-odas-tn.csv</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="variableNames"></stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">false</boolProp>
                <boolProp name="stopThread">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Modul-Controller" enabled="false">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="2025830549">Open Search Test Plan</stringProp>
                  <stringProp name="-1948168983">Thread Group</stringProp>
                  <stringProp name="1446446887">CEOS Tests</stringProp>
                  <stringProp name="-618020408">CEOS-BP-Requirements</stringProp>
                  <stringProp name="-193354893">EVO-ODAS-TN-001 - Service links (cross service links)</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Running CEOS BP Requirements" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="2025830549">Open Search Test Plan</stringProp>
                  <stringProp name="-1948168983">Thread Group</stringProp>
                  <stringProp name="1446446887">CEOS Tests</stringProp>
                  <stringProp name="-618020408">CEOS-BP-Requirements</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Running CEOS BP Recommended" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="2025830549">Open Search Test Plan</stringProp>
                  <stringProp name="-1948168983">Thread Group</stringProp>
                  <stringProp name="1446446887">CEOS Tests</stringProp>
                  <stringProp name="2024423971">CEOS-BP-Recommended</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
              <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Running CEOS BP Optionals" enabled="true">
                <collectionProp name="ModuleController.node_path">
                  <stringProp name="-1227702913">WorkBench</stringProp>
                  <stringProp name="2025830549">Open Search Test Plan</stringProp>
                  <stringProp name="-1948168983">Thread Group</stringProp>
                  <stringProp name="1446446887">CEOS Tests</stringProp>
                  <stringProp name="621467355">CEOS-BP-Optionals</stringProp>
                </collectionProp>
              </ModuleController>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
